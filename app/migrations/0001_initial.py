# Generated by Django 4.2.3 on 2024-02-10 08:27

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
from config.settings import AUTH_USER_MODEL

class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
        migrations.swappable_dependency(AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Aluno',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(blank=True, max_length=100, null=True)),
                ('data_nascimento', models.DateField()),
                ('foto', models.ImageField(blank=True, null=True, upload_to='images/alunos/')),
                ('sexo', models.CharField(choices=[('Masculino', 'masculino'), ('Feminino', 'feminino')], max_length=30)),
                ('Classe', models.CharField(choices=[('10ª classe', '10ª Classe'), ('11ª classe', '11ª Classe'), ('12ª classe', '12ª Classe'), ('13ª classe', '13ª Classe')], max_length=30)),
                ('encarregado_nome', models.CharField(blank=True, max_length=100, null=True)),
                ('encarregado_numero', models.CharField(blank=True, max_length=20, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Aula',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data', models.DateField()),
                ('hora_inicio', models.TimeField()),
                ('hora_fim', models.TimeField()),
            ],
        ),
        migrations.CreateModel(
            name='Classe',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='ConteudoEducacional',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('titulo', models.CharField(max_length=100)),
                ('descricao', models.TextField()),
                ('data_publicacao', models.DateField(auto_now_add=True)),
                ('arquivo', models.FileField(blank=True, null=True, upload_to='arquivos_conteudos/')),
            ],
        ),
        migrations.CreateModel(
            name='Curso',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Disciplina',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Horario',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dia_semana', models.CharField(choices=[('Segunda', 'Segunda-feira'), ('Terca', 'Terça-feira'), ('Quarta', 'Quarta-feira'), ('Quinta', 'Quinta-feira'), ('Sexta', 'Sexta-feira')], max_length=10)),
                ('hora_inicio', models.TimeField()),
                ('hora_fim', models.TimeField()),
                ('aulas', models.ManyToManyField(blank=True, related_name='horarios_aulas', to='app.aula')),
            ],
        ),
        migrations.CreateModel(
            name='Professor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=100)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('departamento', models.CharField(max_length=100)),
                ('titulacao', models.CharField(max_length=50)),
                ('foto', models.ImageField(blank=True, null=True, upload_to='images/professores/')),
                ('conteudos_educacionais', models.ManyToManyField(blank=True, related_name='conteudo', to='app.conteudoeducacional')),
                ('disciplinas_associadas', models.ManyToManyField(to='app.disciplina')),
                ('horarios', models.ManyToManyField(blank=True, related_name='horarios_professor', to='app.horario')),
            ],
        ),
        migrations.CreateModel(
            name='Publicidade',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('titulo', models.CharField(max_length=255)),
                ('conteudo', models.TextField()),
                ('imagem', models.ImageField(blank=True, null=True, upload_to='publicidades/')),
            ],
        ),
        migrations.CreateModel(
            name='Turma',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=30)),
                ('foto', models.ImageField(blank=True, null=True, upload_to='images/turmas/')),
                ('classe', models.CharField(choices=[('10ª classe', '10ª Classe'), ('11ª classe', '11ª Classe'), ('12ª classe', '12ª Classe'), ('13ª classe', '13ª Classe')], max_length=30)),
                ('alunos', models.ManyToManyField(related_name='turmas', to='app.aluno')),
            ],
        ),
        migrations.CreateModel(
            name='Propina',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('valor', models.DecimalField(decimal_places=2, max_digits=10)),
                ('data_pagamento', models.DateField()),
                ('detalhes_fatura', models.TextField()),
                ('tipo_pagamento', models.CharField(choices=[('Propina', 'Propina'), ('Folha de Prova', 'Folha de Prova'), ('Justificacao de Faltas', 'Justificacao de Faltas')], default='Propina', max_length=30)),
                ('mes', models.IntegerField(choices=[(1, 'Janeiro'), (2, 'Fevereiro'), (3, 'Março'), (4, 'Abril'), (5, 'Maio'), (6, 'Junho'), (7, 'Julho'), (8, 'Agosto'), (9, 'Setembro'), (10, 'Outubro'), (11, 'Novembro'), (12, 'Dezembro')])),
                ('pago', models.BooleanField(default=False)),
                ('aluno', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='app.aluno')),
            ],
        ),
        migrations.CreateModel(
            name='ProfessorDisciplina',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('disciplina', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.disciplina')),
                ('professor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.professor')),
            ],
        ),
        migrations.AddField(
            model_name='professor',
            name='turmas_associadas',
            field=models.ManyToManyField(blank=True, to='app.turma'),
        ),
        migrations.AddField(
            model_name='professor',
            name='user',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='Presenca',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data', models.DateField()),
                ('presente', models.CharField(choices=[('P', 'Presente'), ('A', 'Ausente')], default='A', max_length=1)),
                ('aluno', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.aluno')),
                ('aula', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.aula')),
            ],
        ),
        migrations.CreateModel(
            name='MensagemSMS',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('mensagem', models.TextField()),
                ('data_envio', models.DateTimeField(auto_now_add=True)),
                ('encarregado', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='mensagens_recebidas', to=AUTH_USER_MODEL)),
                ('professor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='mensagens_enviadas', to=AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='horario',
            name='professor',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.professor'),
        ),
        migrations.AddField(
            model_name='horario',
            name='turma',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.turma'),
        ),
        migrations.CreateModel(
            name='Evento',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('titulo', models.CharField(max_length=255)),
                ('descricao', models.TextField()),
                ('data', models.DateField()),
                ('hora_inicio', models.TimeField()),
                ('hora_fim', models.TimeField()),
                ('professor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.professor')),
            ],
        ),
        migrations.CreateModel(
            name='Encarregado',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=100)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('telefone', models.CharField(max_length=20)),
                ('profissao', models.CharField(max_length=100)),
                ('foto', models.ImageField(blank=True, null=True, upload_to='images/encarregados/')),
                ('alunos_associados', models.ManyToManyField(blank=True, to='app.aluno')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.AddField(
            model_name='conteudoeducacional',
            name='professor',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.professor'),
        ),
        migrations.CreateModel(
            name='Avaliacao',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('trimestre', models.IntegerField()),
                ('aluno', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.aluno')),
                ('disciplina', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.disciplina')),
            ],
            options={
                'unique_together': {('aluno', 'disciplina', 'trimestre')},
            },
        ),
        migrations.AddField(
            model_name='aula',
            name='disciplina',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.disciplina'),
        ),
        migrations.AddField(
            model_name='aula',
            name='turma',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.turma'),
        ),
        migrations.AddField(
            model_name='aluno',
            name='professor',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.professor'),
        ),
        migrations.AddField(
            model_name='aluno',
            name='turma',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='app.turma'),
        ),
        migrations.CreateModel(
            name='Nota',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tipo_prova', models.CharField(max_length=100)),
                ('nota', models.DecimalField(decimal_places=2, max_digits=5)),
                ('avaliacao', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.avaliacao')),
            ],
            options={
                'unique_together': {('avaliacao', 'tipo_prova')},
            },
        ),
    ]
